plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'net.ltgt.apt-idea' version '0.15'
    id 'net.ltgt.apt-eclipse' version '0.15'
    id 'com.github.hierynomus.license' version '0.14.0'
}

group 'org.mqtt-bee'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

project.ext {
    rxJavaVersion = '2.1.12'
    nettyVersion = '4.1.22.Final'
    daggerVersion = '2.15'
    guavaVersion = '24.1-jre'
    logbackVersion = '1.2.3'
    jcToolsVersion = '2.1.1'
    junit4Version = '4.12'
    junitVintageVersion = '4.12.3'
    junitJupiterVersion = '5.0.3'
    junitPlatformVersion = '1.0.3'
}

dependencies {
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJavaVersion
    compile group: 'io.netty', name: 'netty-handler', version: nettyVersion
    compile group: 'io.netty', name: 'netty-codec-http', version: nettyVersion
    compile group: 'io.netty', name: 'netty-transport-native-epoll', version: nettyVersion, classifier: 'linux-x86_64'
    compile group: 'com.google.guava', name: 'guava', version: guavaVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile group: 'org.jctools', name: 'jctools-core', version: jcToolsVersion

    implementation group: 'com.google.dagger', name: 'dagger', version: daggerVersion
    annotationProcessor group: 'com.google.dagger', name: 'dagger-compiler', version: daggerVersion

    testCompile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'

    testCompile group: 'junit', name: 'junit', version: junit4Version
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitJupiterVersion
    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '2.4.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
    testCompile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    testCompile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.59'
    testCompile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.59'

    testRuntime group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junitVintageVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
    testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: junitPlatformVersion
    testRuntime group: 'org.junit.platform', name: 'junit-platform-runner', version: junitPlatformVersion
}

license {
    header file('license-header.txt')
}

test {
    useJUnitPlatform()
}

task execute(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : ""
    systemProperties = System.properties
}

