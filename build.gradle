plugins {
    id 'java'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.jfrog.artifactory' version '4.7.5'
    id 'idea'
    id 'eclipse'
    id 'net.ltgt.apt-idea' version '0.15'
    id 'net.ltgt.apt-eclipse' version '0.15'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'pmd'
}

group 'org.mqttbee'
version '1.0.0' + (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")
description 'MQTT Bee is a MQTT 5.0 and MQTT 3.1.1 compatible and feature-rich high-performance Java client library ' +
        'with different API flavours and backpressure support'

ext {
    readableName = 'MQTT Bee'
    url = 'http://mqtt-bee.org'
    githubOrg = 'mqtt-bee'
    githubRepo = 'mqtt-bee'
    githubUrl = 'https://github.com/' + githubOrg + '/' + githubRepo
    licenseShortName = 'Apache-2.0'
    licenseReadableName = 'The Apache License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
}

apply from: 'publishing.gradle'

sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext {
    rxJavaVersion = '2.2.5'
    nettyVersion = '4.1.32.Final'
    daggerVersion = '2.20'
    jcToolsVersion = '2.1.2'
    slf4jVersion = '1.7.25'
    jetbrainsAnnotationsVersion = '16.0.3'

    junit4Version = '4.12'
    junitVintageVersion = '4.12.3'
    junitJupiterVersion = '5.0.3'
    junitPlatformVersion = '1.0.3'
}

dependencies {
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJavaVersion
    compile group: 'io.netty', name: 'netty-handler', version: nettyVersion
    compile group: 'io.netty', name: 'netty-codec-http', version: nettyVersion
    compile group: 'io.netty', name: 'netty-transport-native-epoll', version: nettyVersion, classifier: 'linux-x86_64'
    compile group: 'org.jctools', name: 'jctools-core', version: jcToolsVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'org.jetbrains', name: 'annotations', version: jetbrainsAnnotationsVersion

    implementation group: 'com.google.dagger', name: 'dagger', version: daggerVersion
    annotationProcessor group: 'com.google.dagger', name: 'dagger-compiler', version: daggerVersion

    testCompile group: 'junit', name: 'junit', version: junit4Version
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitJupiterVersion

    testCompile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'
    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '2.4.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
    testCompile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.59'
    testCompile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.59'
    testCompile group: 'com.google.guava', name: 'guava', version: '24.1-jre'

    testRuntime group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junitVintageVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
    testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: junitPlatformVersion
    testRuntime group: 'org.junit.platform', name: 'junit-platform-runner', version: junitPlatformVersion
}

license {
    header file('license-header/license-header.txt')
}

test {
    useJUnitPlatform()
}

task execute(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : ""
    systemProperties = System.properties
}
