plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id "net.ltgt.apt-idea" version "0.15"
    id "net.ltgt.apt-eclipse" version "0.15"
    id "com.github.hierynomus.license" version "0.14.0"
}

group 'org.mqtt-bee'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

project.ext {
    rxJavaVersion = '2.1.12'
    nettyVersion = '4.1.22.Final'
    daggerVersion = '2.15'
    guavaVersion = '24.1-jre'
    logbackVersion = '1.2.3'
    jcToolsVersion = '2.1.1'
    junit4Version = '4.12'
    junitVintageVersion = '4.12.3'
    junitJupiterVersion = '5.0.3'
    junitPlatformVersion = '1.0.3'
    intellijAnnotationsVersion = '12.0'
}

dependencies {
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJavaVersion
    compile group: 'io.netty', name: 'netty-handler', version: nettyVersion
    compile group: 'io.netty', name: 'netty-transport-native-epoll', version: nettyVersion, classifier: 'linux-x86_64'
    compile group: 'com.google.guava', name: 'guava', version: guavaVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile group: 'org.jctools', name: 'jctools-core', version: jcToolsVersion

    implementation group: 'com.google.dagger', name: 'dagger', version: daggerVersion
    annotationProcessor group: 'com.google.dagger', name: 'dagger-compiler', version: daggerVersion

    testCompile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'
    compileOnly  group: 'com.intellij', name: 'annotations', version: intellijAnnotationsVersion

    testCompile group: 'junit', name: 'junit', version: junit4Version
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitJupiterVersion
    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '2.4.1'

    testRuntime group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junitVintageVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
    testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: junitPlatformVersion
    testRuntime group: 'org.junit.platform', name: 'junit-platform-runner', version: junitPlatformVersion
}

license {
    header file('codestyle/Apache2_license_header.txt')
}

test {
    useJUnitPlatform()
}

testClasses {
    doFirst {
        mkdir('.idea/modules')
    }
}

idea {
    project {
        configureAnnotationProcessing = true
    }
    module {
        apt {
            // whether generated sources dirs are added as generated sources root
            addGeneratedSourcesDirs = true
            // whether the annotationProcessor/apt and testAnnotationProcessor/testApt dependencies are added as module dependencies
            addAptDependencies = true
        }
    }
}
