/*
You can create a local file named .bintray, which will be ignored by git, wherein you can store your bintray
credentials in the following format and they'll automatically be picked up by this script:

ext {
    bintray_username = '<username>'
    bintray_apiKey = '<api key>'
}
*/
if (file('bintray.gradle').exists()) {
    apply from: 'bintray.gradle'
}

/*
Alternatively, if you don't want to use the bintray.gradle file, you can specify the bintray username
and apiKey via environment variables, e.g. via shell script:

#!/bin/sh
export bintray_username="<username>"
export bintray_apiKey="<api key>"

then either source that script in your shell or call gradle from the script.

Setting the bintray variables via environment variables lends itself
well to CI systems where you are able to specify environment variables securely via the CI config.
*/
['bintray_username', 'bintray_apiKey'].each { propName ->
    if (!project.hasProperty(propName)) {
        project.ext.setProperty(propName, "${System.getenv()[propName]}")
    }
}

publishing {
    /*
    repositories {
        maven {
            url "url here"
            credentials {
                username 'username'
                password 'password'
            }
            name "repo name"
        }
    }
    */
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact packageJavadoc
        }
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

bintray {
	user = bintray_username
	key = bintray_apiKey
	publications = ['mavenJava']

	pkg {
		repo = 'mqtt-bee'
		name = 'mqtt-bee'
		userOrg = 'mqtt-bee'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/mqtt-bee/mqtt-bee'
		version {
			name = '1.0.0'
			desc = '1.0.0'
			released  = new Date()
		}
	}

}
